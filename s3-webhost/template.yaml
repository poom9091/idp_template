apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: s3-webhost
  title: S3 webhost
  description: S3 webhost
  tags:
    - s3
    - cloudfront
    - frontend

spec:
  type: Infra as Code
  parameters:
    - title:
      required:
        - bucket_name
      properties:
        bucket_name:
          title: Buckek name
          type: string
          description: S3 bucket name
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    # - title: Pipeline setup
    #   properties:
    #     pipeline_repo:
    #       title: repository
    #       type: string
    #     pipeline_branch:
    #       title: repo branch
    #       type: string
    #     pipeline_engine:
    #       title: Pipeline engine
    #       type: string
    #       default: aws-pipeline
    #       enum:
    #         - github-action
    #         - aws

  steps:
    - id: http_test
      name: Fetch terraform code 
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.bucket_name }}

    - id: show_workspace
      name: Show workspace files
      action: debug:log
      input:
        listWorkspace: true

    - id: terraform_public
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.bucket_name }}
        repoUrl: ${{ parameters.repoUrl }}
        targetPath: ./content/terraform
        branch: master


    # # The final step is to register our new component in the catalog.
    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Code update 
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
