apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: s3-webhost
  title: S3 webhost
  description: S3 + Cloudfront webhost
spec:
  type: Infra as Code

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title:
      required:
        - buckek_name
        - build_repo
      properties:
        buckek_name:
          title: Buckek name
          type: string
          description: S3 bucket name
        build_repo:
          title: Create repository
          type: boolean
          default: false

    - title: Pipeline setup
      properties:
        pipeline_repo:
          title: repository
          type: string
        pipeline_branch:
          title: repo branch
          type: string
        pipeline_engine:
          title: Pipeline engine
          type: string
          default: aws-pipeline
          enum:
            - github-action
            - aws

  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: http_test
      name: Fetch http
      action: fetch:template
      input:
        url:
        targetPath:

    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
